<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zuobaiquan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zuobaiquan.github.io/"/>
  <updated>2017-04-09T07:46:42.960Z</updated>
  <id>https://zuobaiquan.github.io/</id>
  
  <author>
    <name>zuobaiquan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在代码中减少if else语句的使用</title>
    <link href="https://zuobaiquan.github.io/2016/09/21/reduce-if-else/"/>
    <id>https://zuobaiquan.github.io/2016/09/21/reduce-if-else/</id>
    <published>2016-09-21T08:01:49.000Z</published>
    <updated>2017-04-09T07:46:42.960Z</updated>
    
    <content type="html"><![CDATA[<p>前言<br>代码中嵌套的if/else结构往往导致代码不美观，也不易于理解。面向过程的开发中代码有大量的if else，在java中可以用一些设计模式替换掉这些逻辑，那么在js中是否也有类似的方法用来尽可能减少代码中的if/else嵌套呢？<br><a id="more"></a><br>有人认为：if else多就多呗，只要可读性强，维护起来方便。jQuery.fn.init里就是一堆if else判断，难道要质疑jQuery作者的水平了？</p>
<p>并不是说if else多就不好，关键是看用的地方，jQuery.fn.init里除了if else判断简洁点，难道要改成switch？就算用工厂模式，还不是得做大量的if判断。</p>
<p>常用方法<br>代码整洁强迫症患者必须要来个抛砖引玉：</p>
<h2 id="1-使用-或"><a href="#1-使用-或" class="headerlink" title="1. 使用||或"></a>1. 使用||或</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if(a为真)&#123;</div><div class="line">    a=a</div><div class="line">&#125;else&#123;</div><div class="line">    a=b</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可写成：a = a || b</p>
<h2 id="2-使用三元表达式"><a href="#2-使用三元表达式" class="headerlink" title="2. 使用三元表达式"></a>2. 使用三元表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if(a==b)&#123;</div><div class="line">    a=c</div><div class="line">&#125;else&#123;</div><div class="line">    a=d</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可写成：a = (a==b) ? c : d</p>
<h2 id="3-结合数组"><a href="#3-结合数组" class="headerlink" title="3. 结合数组"></a>3. 结合数组</h2><p>后台接口通常会返回这种数据：<br>fruit: 0 // 0=苹果，1=梨子，2=桔子，3=柠檬，4=芒果…<br>这时写if…else是最痛苦的。从冲哥那偷来个方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var _f = [&apos;苹果&apos;,&apos;梨子&apos;,&apos;桔子&apos;,&apos;柠檬&apos;,&apos;芒果&apos;];</div><div class="line">shuiguo = _f[fruit];</div></pre></td></tr></table></figure></p>
<p>建议</p>
<h2 id="第一步：优化if逻辑"><a href="#第一步：优化if逻辑" class="headerlink" title="第一步：优化if逻辑"></a>第一步：优化if逻辑</h2><p>人们考虑的东西到时候，都会把最可能发生的情况先做好准备。优化if逻辑的时候也可以这样想：把最可能出现的条件放在前面，把最不可能出现的条件放在后面，这样程序执行时总会按照带啊名的先后顺序逐一检测所有的条件，知道发现匹配的条件才会停止继续检测。</p>
<p>if的优化目标：最小化找到分支之前所判断条件体的数量。if优化的方法：将最常见的条件放在首位。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if(i &lt; 5) &#123;</div><div class="line">   // 执行一些代码</div><div class="line">&#125; else if (i &gt; 5 &amp;&amp; i &lt; 10) &#123;</div><div class="line">   // 执行一些代码</div><div class="line">&#125; else &#123;</div><div class="line">   // 执行一些代码</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>例如上面这个例子，只有在i值经常出现小于5的时候是最优化的。如果i值经常大于或者等于10的话，那么在进入正确的分支之前，就必须两次运算条件体，导致表达式的平均运算时间增加。if中的条件体应该总是按照从最大概率到最小概率排列，以保证理论速度最快。</p>
<h2 id="第二步：尽量少使用else"><a href="#第二步：尽量少使用else" class="headerlink" title="第二步：尽量少使用else"></a>第二步：尽量少使用else</h2><p>如果在函数中，可以使用 if + return，先判断错误条件，然后立马结束函数，防止进入 else 分支。</p>
<p>举个简单的例子，后端返回数据，前端根据状态进行不同操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$.ajax().done(function (res) &#123;</div><div class="line">    if (res.state === &apos;SUCCESS&apos;) &#123;</div><div class="line">        //TODO</div><div class="line">    &#125; else if (res.state === &apos;FAIL&apos;) &#123;</div><div class="line">        //TODO</div><div class="line">    &#125; else &#123;</div><div class="line">        //TODO</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>这里用if else不挺好的么，有啥问题么？不过我个人倾向于switch。</p>
<p>解决方法</p>
<ol>
<li>switch/case</li>
</ol>
<p>switch和if else在性能上是没有什么区别的，主要还是根据需求进行分析和选择。</p>
<p>如果条件较小的话选用if else比较合适。<br>相反，条件数量较大的话，就建议选用switch。<br>一般来说，if else适用于两个离散的值或者不同的值域。如果判断多个离散值，使用switch更加合适。</p>
<blockquote>
<p>在大多数的情况下switch比if else运行的更加快。</p>
</blockquote>
<p>在大多数情况下，switch的性能不会比if else低。switch的确在实质上跟if else if 完全一样的效果，不过在很多情况下，使用switch要比if else方便不少</p>
<p>比如经典的值等分支，匹配一些状态常量的时候，比if else结构方便许多，不用反复写xx == yy<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$.ajax().done(function (res) &#123;</div><div class="line">    switch (res.state) &#123;</div><div class="line">        case &apos;SUCCESS&apos;:</div><div class="line">            //TODO</div><div class="line">            break;</div><div class="line">        case &apos;FAIL&apos;:</div><div class="line">            //TODO</div><div class="line">            break;</div><div class="line">        default :</div><div class="line">            //TODO</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>注意：千万不要忘记在每一个case语句后面放一个break语句。也可以放一个return或者throw。case语句匹配expression是用===而不是==。</p>
<p>2.hash 表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if (key == &quot;Apple&quot;) &#123;</div><div class="line">    val = &quot;Jobs&quot;;</div><div class="line">&#125; else if (key == &quot;microsoft&quot;)&#123;</div><div class="line">    val = &quot;Gates&quot;;</div><div class="line">&#125; else if (key == &quot;Google&quot;)&#123;</div><div class="line">    val = &quot;Larry&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这个也可以用 switch case 解决，不过推荐的方法是 hash 表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var ceos = &#123;&quot;Apple&quot;:&quot;Jobs&quot;, &quot;microsoft&quot;:&quot;Gates&quot;, &quot;Google&quot;:&quot;Larry&quot;&#125;;</div><div class="line">val = ceos[key];</div></pre></td></tr></table></figure></p>
<p>3.重构，用 OO 里面的继承或者组合</p>
<blockquote>
<p>1.如果是狗，则汪汪<br>2.如果是猫，则喵喵<br>3.如果是羊，则咩咩<br>4.如果是鸭，则嘎嘎</p>
</blockquote>
<p> 可以重构一下，改成 OO。</p>
<blockquote>
<p> <em>定义类： 动物（或者接口）
</em>定义方法：叫<br><em>定义子类：狗、猫、羊、鸭
</em>重写方法 —- 叫</p>
</blockquote>
<p>也就是说将同的判断按照功能，写成函数，这样也便于阅读<br>比如我有一个方法根据类型获取名称，用if else会这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function getName(type) &#123;</div><div class="line">    if (type === &apos;monkey&apos;) &#123;</div><div class="line">        return &apos;monkey name&apos;;</div><div class="line">    &#125; else if (type === &apos;cat&apos;) &#123;</div><div class="line">        return &apos;cat name&apos;;</div><div class="line">    &#125; else &#123;</div><div class="line">        return &apos;dog name&apos;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果写成函数，改成下面的会更好<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function getName(type) &#123;</div><div class="line">    var data = &#123;</div><div class="line">        monkey: &apos;monkey name&apos;,</div><div class="line">        cat: &apos;cat name&apos;,</div><div class="line">        dog: &apos;dog name&apos;</div><div class="line">    &#125;</div><div class="line">    return data[type] ? data[type] : data[&apos;dog&apos;];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>硬要把设计模式添加到JS里不是不可以，但是要看情况。生搬硬套过来的东西然并卵啊。</p>
<p>写代码记住三个字即可，短简易。代码短，读起来简单，维护容易，如果在性能和代码长度上二选一，我肯定选代码短，性能不行，加台服务器就是了。而冗长的代码并不是加个程序员就能搞定的。</p>
<p>保持着这个心态写代码，写出的东西离设计模式也不会差太多了。</p>
<p>多说一句：存在必有其价值，不能说if else多了就不好，凡事无绝对，适合A的未必就适合B，每个东西都有其实现的场景。同理改写设计模式未必就是最棒的，听起来高大上点而已。</p>
<p>来源：<a href="http://www.xuanfengge.com/how-to-reduce-the-use-of-if-else-statements.html" target="_blank" rel="external">http://www.xuanfengge.com/how-to-reduce-the-use-of-if-else-statements.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言&lt;br&gt;代码中嵌套的if/else结构往往导致代码不美观，也不易于理解。面向过程的开发中代码有大量的if else，在java中可以用一些设计模式替换掉这些逻辑，那么在js中是否也有类似的方法用来尽可能减少代码中的if/else嵌套呢？&lt;br&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://zuobaiquan.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS实现背景透明，文字不透明(兼容所有浏览器)</title>
    <link href="https://zuobaiquan.github.io/2016/08/11/css-opacity/"/>
    <id>https://zuobaiquan.github.io/2016/08/11/css-opacity/</id>
    <published>2016-08-11T04:07:49.000Z</published>
    <updated>2017-04-09T07:46:32.648Z</updated>
    
    <content type="html"><![CDATA[<p>我们平时所说的调整透明度，其实在样式中是调整不透明度，如下图所示例：<br><a id="more"></a><br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714144736561-863618505.png" alt="此处输入图片的描述"><br>打开ps，在图层面板上，可以看到设置图层整理不透明度的菜单，从 0% （完全透明）到 100%（完全不透明）。<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714144830639-716499190.jpg" alt="此处输入图片的描述"><br>实现透明的css方法通常有以下3种方式，以下是不透明度都为80%的写法</p>
<p>css3的opacity:x，x 的取值从 0 到 1，如opacity: 0.8<br>css3的rgba(red, green, blue, alpha)，alpha的取值从 0 到 1，如rgba(255,255,255,0.8)<br>IE专属滤镜 filter:Alpha(opacity=x)，x 的取值从 0 到 100，如filter:Alpha(opacity=80)<br>css3的opacity</p>
<p>兼容性：IE6、7、8不支持，IE9及以上版本和标准浏览器都支持<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714145037639-681202916.png" alt="此处输入图片的描述"><br> 使用说明：设置opacity元素的所有后代元素会随着一起具有透明性，一般用于调整图片或者模块的整体不透明度<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>opacity<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">*&#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">body</span>&#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(img/bg.png) <span class="number">0</span> <span class="number">0</span> repeat;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.demo</span>&#123;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">25px</span>;</div><div class="line">  <span class="attribute">background-color</span>:<span class="number">#000000</span>;</div><div class="line">  <span class="attribute">opacity</span>: <span class="number">0.2</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.demo</span> <span class="selector-tag">p</span>&#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#FFFFFF</span>;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>背景透明，文字也透明<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>使用opacity后整个模块都透明了，展现如下：<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714145214889-941141268.png" alt="此处输入图片的描述"><br>那么使用opacity实现《背景透明，文字不透明》是不可取的。<br>css3的rgba<br>兼容性：IE6、7、8不支持，IE9及以上版本和标准浏览器都支持<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714145308061-1256426158.png" alt="此处输入图片的描述"><br>使用说明：设置颜色的不透明度，一般用于调整background-color、color、box-shadow等的不透明度。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>css3的rgba<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">*&#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">body</span>&#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(img/bg.png) <span class="number">0</span> <span class="number">0</span> repeat;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.demo</span>&#123;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">25px</span>;</div><div class="line">  <span class="attribute">background-color</span>:<span class="number">#000000</span>;<span class="comment">/* IE6和部分IE7内核的浏览器(如QQ浏览器)下颜色被覆盖 */</span></div><div class="line">  <span class="attribute">background-color</span>:<span class="built_in">rgba</span>(0,0,0,0.2); <span class="comment">/* IE6和部分IE7内核的浏览器(如QQ浏览器)会读懂，但解析为透明 */</span></div><div class="line">&#125;</div><div class="line"><span class="selector-class">.demo</span> <span class="selector-tag">p</span>&#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#FFFFFF</span>;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>    </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>背景透明，文字也透明<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>在background-color中使用rgba，标准浏览器中，背景透明，文字不透明，展现如下：<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714145427311-422392724.png" alt="此处输入图片的描述"><br>很奇葩的是，IE6和部分IE7内核的浏览器(如QQ浏览器)会读懂rgba，解析后颜色为透明，其实应该是null<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714145634561-581154038.png" alt="此处输入图片的描述"><br>那么使用opacity实现背景透明，文字不透明是可取的。</p>
<p>IE专属滤镜 filter:Alpha(opacity=x)</p>
<p>使用说明：IE浏览器专属，问题多多，本文以设置背景透明为例子，如下：</p>
<p>1、仅支持IE6、7、8、9，在IE10版本被废除<br>2、在IE6、7中，需要激活IE的haslayout属性(如：<em>zoom:1或者</em>overflow:hidden)，让它读懂filter:Alpha<br>3、在IE6、7、8中，设置了filter:Alpha的元素，父元素设置position:static(默认属性)，其子元素为相对定位，可让子元素不透明<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>opacity<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">*&#123;</div><div class="line">    padding: 0;</div><div class="line">    margin: 0;</div><div class="line">&#125;</div><div class="line">body&#123;</div><div class="line">    padding: 50px;</div><div class="line">    background: url(img/bg.png) 0 0 repeat;</div><div class="line">&#125;</div><div class="line">.demo&#123;</div><div class="line">  padding: 25px;</div><div class="line">  background: #000000;</div><div class="line">  filter:Alpha(opacity=50);/* 只支持IE6、7、8、9 */</div><div class="line">  position:static; /* IE6、7、8只能设置position:static(默认属性) ，否则会导致子元素继承Alpha值 */</div><div class="line">  *zoom:1; /* 激活IE6、7的haslayout属性，让它读懂Alpha */</div><div class="line">&#125;</div><div class="line">.demo p&#123;</div><div class="line">    color: #FFFFFF;</div><div class="line">    position: relative;/* 设置子元素为相对定位，可让子元素不继承Alpha值，保证字体颜色不透明 */</div><div class="line">&#125;      </div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>背景透明，文字不透明<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>全兼容的方案</p>
<p>上以上3点分析可知，设置透明背景文字不透明，可采用的属性有rgba和IE的专属滤镜filter:Alpha，其兼容性如下图所示：<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714145832186-131440309.png" alt="此处输入图片的描述"><br>针对IE6、7、8浏览器，我们可以采用fiter:Alpha，针对标准浏览器我们采用rgba，那么问题来了，IE9浏览器2个属性都支持，一起使用会重复降低不透明度…</p>
<p>那么，如何只对IE6、7、8使用fiter:Alpha如何实现呢？<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 只支持IE6、7、8 */</span></div><div class="line"></div><div class="line">@<span class="keyword">media</span> \<span class="number">0s</span>creen\,screen\<span class="number">9</span> &#123;...&#125;</div></pre></td></tr></table></figure></p>
<p>ok，所有问题都解决了，全部代码如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>背景透明，文字不透明<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">*&#123;</div><div class="line">    padding: 0;</div><div class="line">    margin: 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">body&#123;</div><div class="line">  padding: 50px;</div><div class="line">  background: url(img/bg.png) 0 0 repeat;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.demo&#123;</div><div class="line">  padding: 25px;</div><div class="line">  background-color: rgba(0,0,0,0.5);/* IE9、标准浏览器、IE6和部分IE7内核的浏览器(如QQ浏览器)会读懂 */</div><div class="line">&#125;</div><div class="line">.demo p&#123;</div><div class="line">  color: #FFFFFF;</div><div class="line">&#125;</div><div class="line">@media \0screen\,screen\9 &#123;/* 只支持IE6、7、8 */</div><div class="line">  .demo&#123;</div><div class="line">    background-color:#000000;</div><div class="line">    filter:Alpha(opacity=50);</div><div class="line">    position:static; /* IE6、7、8只能设置position:static(默认属性) ，否则会导致子元素继承Alpha值 */</div><div class="line">    *zoom:1; /* 激活IE6、7的haslayout属性，让它读懂Alpha */</div><div class="line">  &#125;</div><div class="line">  .demo p&#123;</div><div class="line">    position: relative;/* 设置子元素为相对定位，可让子元素不继承Alpha值 */</div><div class="line">  &#125;  </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>背景透明，文字不透明<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p> 我们看到这个可能会觉得很复杂，为什么不直接用两个DIV放在同一个位置就行了，一个不透明DIV，一个文字DIV，很简单的解决问题，这也是好个方法，但是需要写绝对定位或负margin，并出现空内容的DIV，而且这是这种方法在有些场景下也会显得复杂，如下示例，鼠标经过商标后展现展现透明的提示文案，就需要控制2个DIV啦~<br> <img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160714150136357-432087096.gif" alt="此处输入图片的描述"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们平时所说的调整透明度，其实在样式中是调整不透明度，如下图所示例：&lt;br&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="https://zuobaiquan.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>鼠标显示一个层的同时隐藏其他层</title>
    <link href="https://zuobaiquan.github.io/2016/06/22/html-displayhidden/"/>
    <id>https://zuobaiquan.github.io/2016/06/22/html-displayhidden/</id>
    <published>2016-06-22T06:17:49.000Z</published>
    <updated>2017-04-09T07:52:06.693Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下：<br><a id="more"></a></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>: <span class="number">0</span>;&#125;</div><div class="line">    <span class="selector-tag">p</span>&#123;</div><div class="line">        <span class="attribute">width</span>:<span class="number">200px</span>;</div><div class="line">        <span class="attribute">height</span>:<span class="number">200px</span>;</div><div class="line">        <span class="attribute">background</span>: red;</div><div class="line">    &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"id1"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">onMouseOver</span>=<span class="string">"show(0)"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"child1"</span> <span class="attr">style</span>=<span class="string">"display:block;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"id2"</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">onMouseOver</span>=<span class="string">"show(1)"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"child2"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"id3"</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">onMouseOver</span>=<span class="string">"show(2)"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"child3"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span>&gt;</span><span class="xml"></span></div><div class="line">     function show(id)&#123;</div><div class="line">        var aId= ["id1","id2","id3"];</div><div class="line">        var div=["child1","child2","child3"];</div><div class="line">        for(i=0;i<span class="tag">&lt;<span class="name">3;i++)&#123;</span></span></div><div class="line">            <span class="attr">document.getElementById</span>(<span class="attr">div</span>[<span class="attr">i</span>])<span class="attr">.style.display</span>=<span class="string">(i</span>==<span class="string">id?</span>"<span class="attr">block</span>"<span class="attr">:</span>"<span class="attr">none</span>");</div><div class="line">            <span class="attr">document.getElementById</span>(<span class="attr">aId</span>[<span class="attr">i</span>])<span class="attr">.style.display</span>=<span class="string">(i</span>==<span class="string">id?</span>"<span class="attr">none</span>"<span class="attr">:</span>"<span class="attr">block</span>");</div><div class="line">        &#125;</div><div class="line">     &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>效果图如下<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160712220142201-677238748.png" alt="此处输入图片的描述"><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>: <span class="number">0</span>;&#125;</div><div class="line">    <span class="selector-tag">li</span>&#123;<span class="attribute">list-style</span>:none;&#125;</div><div class="line">    <span class="selector-tag">li</span>&#123;</div><div class="line">        <span class="attribute">width</span>:<span class="number">200px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">li</span> <span class="selector-tag">p</span>&#123;</div><div class="line">        <span class="attribute">width</span>:<span class="number">200px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">li</span> <span class="selector-class">.content</span>&#123;</div><div class="line">        <span class="attribute">display</span>: none;</div><div class="line">        <span class="attribute">height</span>:<span class="number">200px</span>;</div><div class="line">        <span class="attribute">width</span>:<span class="number">200px</span>;</div><div class="line">        <span class="attribute">background</span>:red;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.active</span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.active</span> <span class="selector-class">.title</span>&#123;</div><div class="line">        <span class="attribute">display</span>:none;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.active</span> <span class="selector-class">.content</span>&#123;</div><div class="line">        <span class="attribute">display</span>:block;</div><div class="line">    &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>111111111<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">            1的内容<span class="tag">&lt;<span class="name">br</span> /&gt;</span></div><div class="line">            1的内容<span class="tag">&lt;<span class="name">br</span> /&gt;</span></div><div class="line">            1的内容</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>222222222<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">            2的内容<span class="tag">&lt;<span class="name">br</span> /&gt;</span></div><div class="line">            2的内容<span class="tag">&lt;<span class="name">br</span> /&gt;</span></div><div class="line">            2的内容</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>333333333<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">            3的内容<span class="tag">&lt;<span class="name">br</span> /&gt;</span></div><div class="line">            3的内容<span class="tag">&lt;<span class="name">br</span> /&gt;</span></div><div class="line">            3的内容</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span><span class="attr">src</span>=<span class="string">"http://libs.baidu.com/jquery/2.0.3/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line">    $('.container').on('mouseenter', 'li', function(event) &#123;</div><div class="line">      event.preventDefault();</div><div class="line">      /* Act on the event */</div><div class="line">    $(this).addClass('active').siblings('li').removeClass('active');</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>一切都在代码中，无以言表~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码如下：&lt;br&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://zuobaiquan.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>利用纯粹的CSS3替代小图标---向右箭头</title>
    <link href="https://zuobaiquan.github.io/2016/05/12/css-arrow/"/>
    <id>https://zuobaiquan.github.io/2016/05/12/css-arrow/</id>
    <published>2016-05-12T05:17:49.000Z</published>
    <updated>2017-04-09T07:46:47.744Z</updated>
    
    <content type="html"><![CDATA[<p>1、向右的箭头&gt;  .<br> 看到很多网站里面向右的箭头都是图片代替的，但是为了网站的性能，我们一般的原则是能够避免使用图片的尽量不用图片<br><a id="more"></a><br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160706162126202-73429815.png" alt="此处输入图片的描述"><br>比如看下携程个人中心首页面，向右的箭头<br>　　其实现思路是这样的：定义一个正方形盒子，盒子边框定义1px的上边框和右边框，然后对盒子旋转45度即可。</p>
<pre><code>代码如下：
</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"arrow"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.arrow</span>&#123;</div><div class="line">     <span class="attribute">display</span>: inline-block;</div><div class="line">     <span class="attribute">width</span>: <span class="number">7px</span>;</div><div class="line">     <span class="attribute">height</span>: <span class="number">7px</span>;</div><div class="line">     <span class="attribute">border</span>: solid <span class="number">#999</span>;</div><div class="line">     <span class="attribute">border-width</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">0</span> <span class="number">0</span>;</div><div class="line">     <span class="attribute">-webkit-transform</span>:<span class="built_in">rotate</span>(-45deg);</div><div class="line">     <span class="attribute">transform</span>:<span class="built_in">rotate</span>(-45deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>嘘…<br>我们能不能直接使用符号“ &gt; “这个呢。<br>来来来，看淘宝网<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160706163926796-488668722.png" alt="此处输入图片的描述"><br>审查元素之后发现它是这样实现的。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"tb-icon service-arrow"</span>&gt;</span>➤<span class="tag">&lt;/<span class="name">i</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.tb-icon</span>&#123;</div><div class="line">    <span class="attribute">font-family</span>: iconfont<span class="meta">!important</span>;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">    <span class="attribute">font-style</span>: normal;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">    <span class="attribute">-webkit-font-smoothing</span>: antialiased;</div><div class="line">    <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看到没，淘宝都这样做，我们何不借鉴下呢。</p>
<p>不过它在添加字符的时候额外修饰了一番。使用字体抗锯齿属性:-webkit-font-smoothing</p>
<p>对字体进行抗锯齿渲染可以使字体看起来会更清晰舒服。在图标字体成为一种趋势的今天，抗锯齿渲染使用也越来越多。</p>
<p>font-smoothing是非标准的CSS定义。它被列入标准规范的草案中，后由于某些原因从web标准中被移除了。</p>
<p>但是，我们可以用以下两种定义进行抗锯齿渲染<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">-webkit-font-smoothing</span>: <span class="selector-tag">antialiased</span>; <span class="comment">/*chrome、safari*/</span></div><div class="line"><span class="selector-tag">-moz-osx-font-smoothing</span>: <span class="selector-tag">grayscale</span>;<span class="comment">/*firefox*/</span></div></pre></td></tr></table></figure></p>
<p>（1）Webkit在自己的引擎中支持了这一效果。<br>　　-webkit-font-smoothing<br>　　它有三个属性值：<br>　　　　none —— 对低像素的文本比较好<br>　　　　subpixel-antialiased——默认值<br>　　　　antialiased ——抗锯齿很好<br>　　　　例子：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">    -webkit-font-smoothing: antialiased;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　这个属性可以使页面上的字体抗锯齿,使用后字体看起来会更清晰。加上之后就顿时感觉页面小清晰了。</p>
<p>（2）Gecko也推出了自己的抗锯齿效果的非标定义。<br>　　　　-moz-osx-font-smoothing: inherit | grayscale;<br>　　　　这个属性也是更清晰的作用。<br>　　　　例子：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.icon</span> &#123;</div><div class="line">    <span class="attribute">-webkit-font-smoothing</span>: antialiased;</div><div class="line">    <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>（3）Ionic框架在样式中多加了一条font-smoothing: antialiased;<br>　　这是坐等font-smoothing标准化，有备无患么。<br>当然了还有一种方法了，使用Art-Reactor | 字体图标集 这里面有很多很多图标方便我们使用，使用方法也比较简单，详细看看这个就知道了<br><a href="http://chinakids.github.io/Art-Reactor/" target="_blank" rel="external">http://chinakids.github.io/Art-Reactor/</a>   当然这个教程也不错 <a href="http://www.zcool.com.cn/article/ZMTc3NDg4.html" target="_blank" rel="external">http://www.zcool.com.cn/article/ZMTc3NDg4.html</a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"arr"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"arrow"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.arr</span>&#123;</div><div class="line">    <span class="attribute">width</span>:<span class="number">70px</span>;</div><div class="line">    <span class="attribute">height</span>:<span class="number">70px</span>;</div><div class="line">    <span class="attribute">line-height</span>:<span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>:<span class="built_in">rgba</span>(153,153,153,0.8);</div><div class="line">    <span class="attribute">border-radius</span>:<span class="number">50%</span>;</div><div class="line">    <span class="attribute">text-align</span>:center;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.arr</span> <span class="selector-class">.arrow</span>&#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">width</span>:<span class="number">26px</span>;</div><div class="line">    <span class="attribute">height</span>:<span class="number">26px</span>;</div><div class="line">    <span class="attribute">border</span>: solid <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">border-width</span>: <span class="number">4px</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span>;</div><div class="line">    <span class="attribute">-webkit-transform</span>:<span class="built_in">rotate</span>(-45deg);</div><div class="line">     <span class="attribute">transform</span>:<span class="built_in">rotate</span>(-45deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160706172536233-81859514.png" alt="此处输入图片的描述"></p>
<p>小应用：回到网站头部小图标　　　　
　　　　</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、向右的箭头&amp;gt;  .&lt;br&gt; 看到很多网站里面向右的箭头都是图片代替的，但是为了网站的性能，我们一般的原则是能够避免使用图片的尽量不用图片&lt;br&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="https://zuobaiquan.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>关于浮动与清除浮动</title>
    <link href="https://zuobaiquan.github.io/2016/04/29/css-float/"/>
    <id>https://zuobaiquan.github.io/2016/04/29/css-float/</id>
    <published>2016-04-29T12:17:49.000Z</published>
    <updated>2017-04-09T07:46:51.350Z</updated>
    
    <content type="html"><![CDATA[<p>页面布局方式，主要包含：文档流、浮动层、float属性。<br><a id="more"></a><br>☞html页面的标准文档流(默认布局)是：从上到下，从左到右，遇块(块级元素)换行。</p>
<p>☞浮动层：给元素的float属性赋值后，就是脱离文档流，进行左右浮动，紧贴着父元素(默认为body文本区域)的左右边框。而此浮动元素在文档流空出的位置，由后续的(非浮动)元素填充上去：块级元素直接填充上去，若跟浮动元素的范围发生重叠，浮动元素覆盖块级元素。内联元素：有空隙就插入。</p>
<p>☞float属性包括left(元素向左浮动)、right(元素向右浮动)、 none(默认值)、(inherit)从父元素继承float属性。</p>
<p>但是浮动有时候会很烦，为什么说很烦呢？</p>
<p>举个栗子吧<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160704222028421-1945556963.png" alt="此处输入图片的描述"><br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160704221819967-462770886.png" alt="此处输入图片的描述"></p>
<p>浮动对页面的影响：如果一个父盒子中有一个子盒子，并且父盒子没有设置高度，子盒子在父盒子中浮动，因为float会脱离文档流，这样就导致了父元素的height为0 ，下面的元素会自动补位。故需要进行清除浮动。</p>
<p>清楚浮动的方式有很多种，那就总结一下吧</p>
<h3 id="1、使用额外标签法：在浮动盒子下面添加一个标签，使用clear-both来清楚浮动"><a href="#1、使用额外标签法：在浮动盒子下面添加一个标签，使用clear-both来清楚浮动" class="headerlink" title="1、使用额外标签法：在浮动盒子下面添加一个标签，使用clear:both来清楚浮动"></a>1、使用额外标签法：在浮动盒子下面添加一个标签，使用clear:both来清楚浮动</h3><p><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160704223401280-784662521.png" alt="此处输入图片的描述"><br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160704223442749-179285365.png" alt="此处输入图片的描述"><br> 这里我们发现很明显的缺点：父盒子还是不会直接显示，而且这种浮动方式会增加页面的标签<div class="clearfix"></div>，故一般情况下不采用这种清楚浮动方式</p>
<h3 id="2、使用CSS的-after伪元素"><a href="#2、使用CSS的-after伪元素" class="headerlink" title="2、使用CSS的:after伪元素"></a>2、使用CSS的:after伪元素</h3><p><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160704224517233-367081344.png" alt="此处输入图片的描述"><br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160704224549077-1839890722.png" alt="此处输入图片的描述"><br>说明：给浮动元素的容器添加一个clearfix的class类，然后给这个class添加一个:after伪元素实现元素末尾添加一个空的块级元素（这个元素的高为0，行高也为0，并且这个元素清楚了浮动） 。为了IE6和IE7浏览器，要添加一条zoom:1;触发haslayout。</p>
<h3 id="3、使用CSS的overflow属性"><a href="#3、使用CSS的overflow属性" class="headerlink" title="3、使用CSS的overflow属性"></a>3、使用CSS的overflow属性</h3><p>先找到浮动盒子的父元素，再在父元素添加添加overflow:hidden;或overflow:auto;可以清除浮动，另外在 IE6 中还需要触发 hasLayout ，例如为父元素设置容器宽高或设置 zoom:1。<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160704225625780-167678295.png" alt="此处输入图片的描述"><br>注意：一般情况下也不使用这种清楚方式，因为overflow:hidden有一个属性，离开了这个元素所在的区域以后会被隐藏</p>
<p>综上所述：使用CSS的:after伪元素是最佳选择</p>
<p>关于浮动更多内容可以参考<a href="http://www.cnblogs.com/polk6/archive/2013/07/25/3142187.html" target="_blank" rel="external">http://www.cnblogs.com/polk6/archive/2013/07/25/3142187.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;页面布局方式，主要包含：文档流、浮动层、float属性。&lt;br&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="https://zuobaiquan.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>css border制作小三角形状及气泡框(兼容IE6)</title>
    <link href="https://zuobaiquan.github.io/2016/03/29/css-triangle/"/>
    <id>https://zuobaiquan.github.io/2016/03/29/css-triangle/</id>
    <published>2016-03-29T02:17:49.000Z</published>
    <updated>2017-04-09T07:46:26.598Z</updated>
    
    <content type="html"><![CDATA[<p>先看下CSS盒模型 <a id="more"></a><br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160711094002342-1002700532.png" alt="此处输入图片的描述"></p>
<p>一个盒子包括: margin+border+padding+content上下左右边框交界处出呈现平滑的斜线.利用这个特点, 通过设置不同的上下左右边框宽度或者颜色可以得到小三角, 小梯形等.调整宽度大小可以调节三角形形状.一般情况下,我们设置盒子的宽高度, 及上下左右边框.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-class">.test</span>&#123;</div><div class="line">      <span class="attribute">height</span>:<span class="number">60px</span>;</div><div class="line">      <span class="attribute">width</span>:<span class="number">60px</span>;</div><div class="line">      <span class="attribute">border-color</span>:red green blue yellow;</div><div class="line">      <span class="attribute">border-style</span>:solid;</div><div class="line">      <span class="attribute">border-width</span>:<span class="number">30px</span>;</div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160711094248029-1341116506.png" alt="此处输入图片的描述"><br>根据盒子模型，我们把div宽高度都设为0时,<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-class">.test</span>&#123;</div><div class="line">      <span class="attribute">height</span>:<span class="number">0px</span>;<span class="comment">/* div盒子设置高度设置为0 */</span></div><div class="line">      <span class="attribute">width</span>:<span class="number">0px</span>;<span class="comment">/* div盒子设置宽度设置为0 */</span></div><div class="line">      <span class="attribute">border-color</span>:red green blue yellow;</div><div class="line">      <span class="attribute">border-style</span>:solid;</div><div class="line">      <span class="attribute">border-width</span>:<span class="number">30px</span>;</div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160711094452639-402904924.png" alt="此处输入图片的描述"><br>为了兼容IE6，需要添加代码 _font-size: 0; _line-height: 0;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-class">.test</span>&#123;</div><div class="line">      <span class="attribute">height</span>:<span class="number">0px</span>;<span class="comment">/* div盒子设置高度设置为0 */</span></div><div class="line">      <span class="attribute">width</span>:<span class="number">0px</span>;<span class="comment">/* div盒子设置宽度设置为0 */</span></div><div class="line">      <span class="attribute">border-color</span>:red green blue yellow;</div><div class="line">      <span class="attribute">border-style</span>:solid;</div><div class="line">      <span class="attribute">border-width</span>:<span class="number">30px</span>;</div><div class="line">      <span class="attribute">overflow</span>: hidden; <span class="comment">/* 这里设置overflow, font-size, line-height */</span></div><div class="line">      <span class="attribute">font-size</span>: <span class="number">0</span>;     <span class="comment">/*是因为, 虽然宽高度为0, 但在IE6下会具有默认的 */</span></div><div class="line">      <span class="attribute">line-height</span>: <span class="number">0</span>;  <span class="comment">/* 字体大小和行高, 导致盒子呈现被撑开的长矩形 */</span></div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>这时, 其实我们已经看到有上下左右四个三角形了..如果, 我们把4种颜色, 只保留一种颜色, 余下3种颜色设置为透明(或者设置为和背景色相同的颜色), 那不就是一个小三角了么<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-class">.test</span>&#123;</div><div class="line">      <span class="attribute">height</span>:<span class="number">0px</span>;<span class="comment">/* div盒子设置高度设置为0 */</span></div><div class="line">      <span class="attribute">width</span>:<span class="number">0px</span>;<span class="comment">/* div盒子设置宽度设置为0 */</span></div><div class="line">      <span class="attribute">border-color</span>:red  transparent transparent transparent;</div><div class="line">      <span class="attribute">border-style</span>:solid;</div><div class="line">      <span class="attribute">border-width</span>:<span class="number">30px</span>;</div><div class="line">      <span class="attribute">overflow</span>: hidden; <span class="comment">/* 这里设置overflow, font-size, line-height */</span></div><div class="line">      <span class="attribute">font-size</span>: <span class="number">0</span>;     <span class="comment">/*是因为, 虽然宽高度为0, 但在IE6下会具有默认的 */</span></div><div class="line">      <span class="attribute">line-height</span>: <span class="number">0</span>;  <span class="comment">/* 字体大小和行高, 导致盒子呈现被撑开的长矩形 */</span></div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>可是, IE6下不支持透明啊~~~, 会出现下图的样子（换句话说IE6不支持transparent，而使用默认的背景色黑色）<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160711105412482-1182318162.gif" alt="此处输入图片的描述"><br>为了解决这个兼容性问题，IE6下, 设置余下三条边的border-style为dashed，利用虚线样式的border可以形成天然无污染的空白，即可达到透明的效果。<br>即把原来的代码中的</p>
<blockquote>
<p>border-style:solid;</p>
</blockquote>
<p>换成</p>
<blockquote>
<p>   border-style:solid dashed dashed dashed;</p>
</blockquote>
<p>上面我们画的小三角的斜边都是依靠原来盒子的边, 还有另外一种形式的小三角, 就是斜边在盒子的对角线上<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160711111044607-1148105790.png" alt="此处输入图片的描述"><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-class">.test</span>&#123;</div><div class="line">      <span class="attribute">height</span>:<span class="number">0px</span>;<span class="comment">/* div盒子设置高度设置为0 */</span></div><div class="line">      <span class="attribute">width</span>:<span class="number">0px</span>;<span class="comment">/* div盒子设置宽度设置为0 */</span></div><div class="line">      <span class="attribute">border-color</span>:red green transparent transparent;</div><div class="line">      <span class="attribute">border-style</span>:solid solid dashed dashed;</div><div class="line">      <span class="attribute">border-width</span>:<span class="number">30px</span>;</div><div class="line">      <span class="attribute">overflow</span>: hidden; <span class="comment">/* 这里设置overflow, font-size, line-height */</span></div><div class="line">      <span class="attribute">font-size</span>: <span class="number">0</span>;     <span class="comment">/*是因为, 虽然宽高度为0, 但在IE6下会具有默认的 */</span></div><div class="line">      <span class="attribute">line-height</span>: <span class="number">0</span>;  <span class="comment">/* 字体大小和行高, 导致盒子呈现被撑开的长矩形 */</span></div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>保留其中一种颜色, 就可以得到斜边在对角线上的三角形了…多个这样的三角形, 通过设置边框大小, 颜色, 拼凑起来可以形成任意形状的三角形.<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160711111343873-1411124274.gif" alt="此处输入图片的描述"><br>像这种不规则的三角形, 延伸一下, 放在气泡框上, 就可以省去拼背景图片的麻烦了.<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160711111410686-1577431584.gif" alt="此处输入图片的描述"><br>另外, 关于气泡框, 可以用特殊字符模拟小三角同样需要用到定位和重叠覆盖，只不过不需要调整border属性了。<br>先来看一个菱形“◆” ，它在页面中的代码是“&amp;#9670”，需要注意的是页面编码需要设置为utf-8，在网页中可以把◆当作文字处理，可以通过调整font-size来它的大小、通过color来设置它的颜色。<br>HTML结构依然用前面的，不同的是在em、span标签中加入了 ◆<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="comment">/*先来设置最外层div的样式，得到一个矩形框*/</span></div><div class="line">  <span class="selector-class">.tag</span>&#123;</div><div class="line">    <span class="attribute">width</span>:<span class="number">300px</span>;</div><div class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">border</span>:<span class="number">5px</span> solid <span class="number">#09F</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="comment">/*接着定位箭头最外层容器div，便于观察可以先设置一个背景色*/</span></div><div class="line">  <span class="selector-class">.arrow</span>&#123;</div><div class="line">    <span class="attribute">position</span>:absolute;</div><div class="line">    <span class="attribute">width</span>:<span class="number">40px</span>;</div><div class="line">    <span class="attribute">height</span>:<span class="number">40px</span>;</div><div class="line">    <span class="attribute">left</span>:<span class="number">100px</span>;</div><div class="line">    <span class="attribute">bottom</span>:-<span class="number">40px</span>;</div><div class="line">    <span class="attribute">overflow</span>:hidden;</div><div class="line">  &#125;</div><div class="line">  <span class="comment">/*再对◆设置样式*/</span></div><div class="line">  <span class="selector-class">.arrow</span> *&#123;</div><div class="line">    <span class="attribute">display</span>:block;</div><div class="line">    <span class="attribute">position</span>:absolute;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">40px</span>;</div><div class="line">    <span class="attribute">line-height</span>:<span class="number">40px</span>;</div><div class="line">    <span class="attribute">width</span>:<span class="number">40px</span>;</div><div class="line">    <span class="attribute">font-family</span>:SimSun;</div><div class="line">    <span class="attribute">font-style</span>:normal;</div><div class="line">    <span class="attribute">font-weight</span>:normal;</div><div class="line">    <span class="attribute">text-align</span>:center;</div><div class="line">    <span class="attribute">vertical-align</span>:middle;</div><div class="line">  &#125;</div><div class="line">  <span class="comment">/*注意：为了◆主流浏览器中显示一致，需要清除浏览器的默认字体样式，特别注意这里字体的设置再分别修改em、span标签的字体颜色，并对这两个标签定位：*/</span></div><div class="line">  <span class="selector-class">.arrow</span> <span class="selector-tag">em</span>&#123;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#09F</span>;</div><div class="line">    <span class="attribute">top</span>:-<span class="number">15px</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.arrow</span> <span class="selector-tag">span</span>&#123;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#FFF</span>;</div><div class="line">    <span class="attribute">top</span>:-<span class="number">22px</span>;</div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"arrow"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">em</span>&gt;</span>◆<span class="tag">&lt;/<span class="name">em</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>◆<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      CSS气泡框实现</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>效果图为：<br><img src="http://images2015.cnblogs.com/blog/986385/201607/986385-20160711112905014-415961613.png" alt="此处输入图片的描述"><br>补充：以上方式实现小三角的过程中不可避免的增加了多余的标签，如果不要求所有浏览器中显示一致的话， 我们可以利用css3来实现这个小三角<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tag"</span>&gt;</span></div><div class="line">    css3气泡框</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.tag</span>&#123;</div><div class="line">    <span class="attribute">width</span>:<span class="number">300px</span>;</div><div class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</div><div class="line">    <span class="attribute">border</span>:<span class="number">5px</span> solid <span class="number">#09F</span>;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">background-color</span>:<span class="number">#FFF</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.tag</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.tag</span><span class="selector-pseudo">:after</span>&#123;</div><div class="line">    <span class="attribute">content</span>:<span class="string">""</span>;<span class="attribute">display</span>:block;</div><div class="line">    <span class="attribute">border-width</span>:<span class="number">20px</span>;</div><div class="line">    <span class="attribute">position</span>:absolute; <span class="attribute">bottom</span>:-<span class="number">40px</span>;</div><div class="line">    <span class="attribute">left</span>:<span class="number">100px</span>;</div><div class="line">    <span class="attribute">border-style</span>:solid dashed dashed;</div><div class="line">    <span class="attribute">border-color</span>:<span class="number">#09F</span> transparent transparent;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">0</span>;</div><div class="line">    <span class="attribute">line-height</span>:<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.tag</span><span class="selector-pseudo">:after</span>&#123;</div><div class="line">    <span class="attribute">bottom</span>:-<span class="number">33px</span>;</div><div class="line">    <span class="attribute">border-color</span>:<span class="number">#FFF</span> transparent transparent;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先看下CSS盒模型
    
    </summary>
    
    
      <category term="CSS" scheme="https://zuobaiquan.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>一名高效程序员应该有的7个习惯</title>
    <link href="https://zuobaiquan.github.io/2016/03/19/tech-seven-habits/"/>
    <id>https://zuobaiquan.github.io/2016/03/19/tech-seven-habits/</id>
    <published>2016-03-19T06:17:49.000Z</published>
    <updated>2017-04-09T07:44:27.345Z</updated>
    
    <content type="html"><![CDATA[<p>花的时间越多就能写出越可靠的代码吗？不一定。那如何才能写出优秀代码的呢？<br>提示：懒惰是一个良好的开始哦。<a id="more"></a><br>Perl 编程语言的原作者 Larry Wall 曾说过，伟大的程序员都有三个优点：<strong>懒惰</strong>、<strong>急躁</strong>和<strong>傲慢</strong>。<br>为什么这样说呢？<br><strong>懒惰</strong>会促使他们去写一些省事儿的程序来辅助他们或别人更好的工作，这样他们就无需再去回答一些不想回答的问题。<br><strong>没耐心</strong>会激励他们去写一些程序，不等你提出就主动满足你的需求。<br><strong>傲慢</strong>会促使他们写出可靠无误的代码，因为他们不想受到批评和指责。<br>但是，伟大的程序员也并不总是高效的，那些每天都能将自己的工作完成的很好的开发者，比那些偶尔编码到令人眩晕的高度的程序员要更高效。对大多数雇主来说，重要的是曲线下的面积，而不是最高点。</p>
<p>因此，为了最大限度得提高你的就业能力，你不需要成为一个伟大的开发者，而是一个高效的开发者。这里分享7个习惯，帮让你成为高效的开发者。</p>
<blockquote>
<ul>
<li>每天至少写4个小时代码</li>
<li>配合开发团队</li>
<li>利用业余时间编码</li>
<li>学会写潦草的代码</li>
<li>不要在相同的工作上停留过长时间</li>
<li>永远不要停止学习</li>
<li>因为热爱去编程</li>
</ul>
</blockquote>
<h3 id="1-每天至少写4个小时代码"><a href="#1-每天至少写4个小时代码" class="headerlink" title="1.每天至少写4个小时代码"></a>1.每天至少写4个小时代码</h3><p>乍一看，这条建议很没有意义，因为大部分程序员在他们的电脑桌前要写至少8个小时的代码，很多甚至是10个小时。然而，Copyin 的 创始人兼CEO Peter Nixey 认为，他们实际上只有很少的时间花在了实际开发工作中。<br>“我曾经从事的项目中，开发者把他们的时间大部分都消磨在了会议、乒乓球、午餐等上面，”他说。“所以，纯粹写代码的时间是没有4个小时的，但令人惊讶的是，在办公环境中这点是很难实现的。”<br><strong>为什么呢？</strong><br>Nixey 解释说，一个很重要的因素就是，要保证开发者在那4个小时内不能被打扰。因为一旦你全身心投入进去，你的大脑就处在高速运行中，一旦中间被打断了，可能会需要你花一个小时的时间才能找回原来的感觉和思路。<br>怪不得那么多程序员都不喜欢在编程中受到打扰呢。</p>
<hr>
<h3 id="2-配合开发团队"><a href="#2-配合开发团队" class="headerlink" title="2.配合开发团队"></a>2.配合开发团队</h3><p>作为团队中的其中一员，学会和你的同事相处是成为一个高效开发者的重要组成部分。开发者网络 Scalable Path CEO Damien Filiatrault 认为，这要比你有经验丰富的编码技能更重要。<br>提出和一个自认为比别人聪明的家伙一起工作有多不开心。Filiatrault 说，无论他多么有才华，就问一个关键的问题，“和他们一起工作有趣吗？”如果答案是否定的，“那可能会影响整个团队的士气，”他补充到。<br>但这不仅仅是自大的家伙单方面造成的问题。如果开发人员太好或者因为某些原因不适应团队环境也可能会出现一些问题。例如，Filiatrault指出，“世界上任何一个角落的开发者都想尽可能的避免冲突，而他们可能又不愿承认自己无能为力，这也是一个问题。”</p>
<h3 id="3-利用业余时间编码"><a href="#3-利用业余时间编码" class="headerlink" title="3.利用业余时间编码"></a>3.利用业余时间编码</h3><p>如果你写代码仅仅是为了钱，那么你很难在新的领域学到新技能以及经验。这也是为什么 Added Bytes 的创始人Dave Child会说，为了娱乐而去编码是很重要的。<br>他说：“我所知道的最好的开发者，他们业余都有自己研究的项目领域。”<br>那些开发者不会为他们的小项目使用他们在工作中需要的技能，Child补充道。相反，他们会利用一些业余项目来增加自己的技能，同时让自己跟上新技术发展的步伐，这才是真正让他们兴奋的。</p>
<h3 id="4-学会写潦草的代码"><a href="#4-学会写潦草的代码" class="headerlink" title="4.学会写潦草的代码"></a>4.学会写潦草的代码</h3><p>很少有项目会需要开发者去天才般的创建华丽丽的代码作品：它们所需要的通常是一个可以在上面建立具体功能的通用平台。<br>Nixey说最好的方式就是快速写一些可运行的作品，然后从中受益。<br>“不管你的代码是邋遢也好，重复也好，命名很烂也好，”他说，“代码只是一种解决方案的表现形式，之后你可以去重构它，让它看起来很好。”</p>
<h3 id="5-不要在相同的工作上停留过长时间"><a href="#5-不要在相同的工作上停留过长时间" class="headerlink" title="5.不要在相同的工作上停留过长时间"></a>5.不要在相同的工作上停留过长时间</h3><p>Child说，一个保证不失去自己编程优势的有效方式就是去重新找一个工作，然后让自己融入到开发团队中。因为一旦你掌握了工作所需的所有技能，你就进入了一个死胡同，你的技能很难再提升，你也很难成为一个更好的程序员。<br>“你需要不断挑战自己，”他说。“如果你在一个地方工作了好几年，那么你可能已经最大限度的学到了当时想学的东西，所以不要再待在那了——继续前行，去寻找新的挑战。”</p>
<h3 id="6-永远不要停止学习"><a href="#6-永远不要停止学习" class="headerlink" title="6.永远不要停止学习"></a>6.永远不要停止学习</h3><p>软件技术更新的非常快，这意味着现在很多重要的编码技能可能很快就会过时。所以，如果你打算在软件开发领域有一个长期的发展，及时了解新的编程语言和技术趋势是非常重要的。<br>开发公司Progress Software的首席布道官Todd Anglin说，“事实很简单但也很残酷，你现有的知识是不足以你去消费一辈子的，你必须做好不断去重新学习的准备，因为你现在所拥有的知识未来是不能满足你的需求的。”<br>他还补充说，清楚并专注于你感兴趣的领域，而不是试图成为各行各业的高手是很重要的。“对你想深入学习的领域，要保持如饥似渴的态度和持续的激情。不要试图去啥都学，因为这是不可能的——要保持专注，不断学习。”<br>Filiatrault也同意Todd的看法。“也许你每一份开发工作都会有一半之前没有做过的事情，所以你要有的重要的技能就是知道如何去学习，去寻找信息，”他说，“如果你有了这项技能，那么不管你需要什么你都可以通过自学拥有了。”</p>
<h3 id="7-因为热爱去编程"><a href="#7-因为热爱去编程" class="headerlink" title="7.因为热爱去编程"></a>7.因为热爱去编程</h3><p>Gregor Riegler是Be a Better Developer博客的一个作者，他说，选择自己热爱的领域是至关重要的，这样才能确保自己能够全身心投入项目中去。<br>“产生动力最重要的因素是你关心代码能够做什么，”他说，“也许它可以以某种方式让一个app运行，也许它会让一台机器以你希望的方式工作。”<br>无论如何，他补充说，“你要真正去享受自己正在做的事，并尝试获得最佳效果。如果你能从中找到快乐，那么恭喜你，你一定会写出伟大的代码。”</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;花的时间越多就能写出越可靠的代码吗？不一定。那如何才能写出优秀代码的呢？&lt;br&gt;提示：懒惰是一个良好的开始哦。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS 隐藏页面元素的 几 种方法总结</title>
    <link href="https://zuobaiquan.github.io/2016/01/11/css-hidden/"/>
    <id>https://zuobaiquan.github.io/2016/01/11/css-hidden/</id>
    <published>2016-01-11T04:07:49.000Z</published>
    <updated>2017-04-09T07:46:35.668Z</updated>
    
    <content type="html"><![CDATA[<p>用 CSS 隐藏页面元素有许多种方法。你可以将 <code>opacity</code> 设为 <code>0</code>、将 <code>visibility</code> 设为 <code>hidden</code>、将 <code>display</code> 设为 <code>none</code> 或者将 <code>position</code> 设为 <code>absolute</code> 然后将位置设到不可见区域。<a id="more"></a></p>
<p>你有没有想过，为什么我们要有这么多技术来隐藏元素，而它们看起来都实现的是同样的效果？<strong>每一种方法实际上与其他方法之间都有一些细微的不同</strong>，这些不同决定了在一个特定的场合下使用哪一个方法。我们只需要记住的细小不同点，根据不同情况选择上面这些方法中适合的方法来隐藏元素。</p>
<h2 id="display"><a href="#display" class="headerlink" title="display"></a>display</h2><p><code>display</code> 属性依照词义真正隐藏元素。将 <code>display</code> 属性设为 <code>none</code> 确保元素不可见并且连盒模型也不生成。使用这个属性，<strong>被隐藏的元素不占据任何空间</strong>。不仅如此，一旦<code>display</code> 设为 <code>none</code> 任何对该元素直接打用户交互操作都不可能生效。此外，读屏软件也不会读到元素的内容。这种方式产生的效果就像元素完全不存在。</p>
<p>任何这个元素的子孙元素也会被同时隐藏。为这个属性添加过渡动画是无效的，它的任何不同状态值之间的切换总是会立即生效。</p>
<p>不过请注意，通过 DOM 依然可以访问到这个元素。因此你可以通过 DOM 来操作它，就像操作其他的元素。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.hide &#123;</div><div class="line">   display: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看下面的例子：</p>
<p><a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a> 提供的例子<a href="http://codepen.io/SitePoint/pen/zBGbjb/" target="_blank" rel="external">“用 display 隐藏元素”</a></p>
<p>你将看到第二个块元素内有一个 <code>&lt;p&gt;</code> 元素，它自己的 <code>display</code> 属性被设置成<code>block</code>，但是它依然不可见。这是 <code>visibility:hidden</code> 和 <code>display:none</code> 的另一个不同之处。在前一个例子里，将任何子孙元素 <code>visibility</code> 显式设置成 <code>visible</code> 可以让它变得可见，但是 <code>display</code> 不吃这一套，不管自身的 <code>display</code> 值是什么，只要祖先元素的 <code>display</code> 是 <code>none</code>，它们就都不可见。</p>
<p>现在，将鼠标移到第一个块元素上面几次，然后点击它。这个操作将让第二个块元素显现出来，它其中的数字将是一个大于 0 的数。这是因为，元素即使被这样设置成对用户隐藏，还是可以通过 JavaScript 来进行操作。</p>
<h2 id="Visibility"><a href="#Visibility" class="headerlink" title="Visibility"></a>Visibility</h2><p>第二个要说的属性是 <code>visibility</code>。将它的值设为 <code>hidden</code> 将隐藏我们的元素。如同<code>opacity</code> 属性，被隐藏的元素依然会对我们的网页布局起作用。与 <code>opacity</code> 唯一不同的是它不会响应任何用户交互。此外，元素在读屏软件中也会被隐藏。</p>
<p>这个属性也能够实现动画效果，只要它的初始和结束状态不一样。这确保了 visibility 状态切换之间的过渡动画可以是时间平滑的（事实上可以用这一点来用 hidden 实现元素的<a href="http://www.zhangxinxu.com/wordpress/2013/05/transition-visibility-show-hide/" target="_blank" rel="external">延迟显示和隐藏</a>——译者注）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.hide &#123;</div><div class="line">   visibility: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面的例子演示了 <code>visibility</code> 与 <code>opacity</code> 有怎样的不同：</p>
<p>看 <a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a> 提供的例子<a href="http://codepen.io/SitePoint/pen/pbJYpV/" target="_blank" rel="external">“用 visibility 隐藏元素”</a></p>
<p>注意，如果一个元素的 <code>visibility</code> 被设置为 <code>hidden</code>，同时想要显示它的某个子孙元素，只要将那个元素的 <code>visibility</code> 显式设置为 <code>visible</code> 即可（就如例子里面的 .o-hide p——译者注）。尝试只 hover 在隐藏元素上，不要 hover 在 p 标签里的数字上，你会发现你的鼠标光标没有变成手指头的样子。此时，你点击鼠标，你的 click 事件也不会被触发。</p>
<p>而在 <code>&lt;div&gt;</code> 标签里面的 <code>&lt;p&gt;</code> 标签则依然可以捕获所有的鼠标事件。一旦你的鼠标移动到文字上，<code>&lt;div&gt;</code> 本身变得可见并且事件注册也随之生效。</p>
<h2 id="Opacity"><a href="#Opacity" class="headerlink" title="Opacity"></a>Opacity</h2><p><code>opacity</code> 属性的意思是设置一个元素的透明度。它不是为改变元素的边界框（bounding box）而设计的。<strong>这意味着将 opacity 设为 0 只能从视觉上隐藏元素</strong>。<strong>而元素本身依然占据它自己的位置并对网页的布局起作用。它也将响应用户交互。</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.hide &#123;</div><div class="line">  opacity: 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果你打算使用 <code>opacity</code> 属性在读屏软件中隐藏元素，很不幸，你并不能如愿。元素和它所有的内容会被读屏软件阅读，就像网页上的其他元素那样。换句话说，元素的行为就和它们不透明时一致。</p>
<p>我还要提醒一句，<code>opacity</code> 属性可以用来实现一些效果很棒的动画。任何 <code>opacity</code> 属性值小于 <code>1</code> 的元素也会创建一个新的堆叠上下文（<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context" target="_blank" rel="external">stacking context</a>）。</p>
<p>看下面的例子：</p>
<p>看 <a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a> 提供的例子<a href="http://codepen.io/SitePoint/pen/bedZrR/" target="_blank" rel="external">“用 opacity 隐藏元素”</a></p>
<p>当你的鼠标移到被隐藏的第 2 个的区块上，元素状态平滑地从完全透明过渡到完全不透明。区块也将 <code>cursor</code> 属性设置为了 <code>pointer</code>，这说明了用户可以与它交互。</p>
<h2 id="Position"><a href="#Position" class="headerlink" title="Position"></a>Position</h2><p>假设有一个元素你想要与它交互，但是你又不想让它影响你的网页布局，没有合适的属性可以处理这种情况（opacity 和 visibility 影响布局， display 不影响布局但又无法直接交互——译者注）。在这种情况下，你只能考虑将元素移出可视区域。这个办法既不会影响布局，有能让元素保持可以操作。下面是采用这种办法的 CSS：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.hide &#123;</div><div class="line">   position: absolute;</div><div class="line">   top: -9999px;</div><div class="line">   left: -9999px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面的例子阐明了怎样通过绝对定位的方式隐藏元素，并让它和前面的那个例子效果一样：</p>
<p>看 <a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a> 提供的例子<a href="http://codepen.io/SitePoint/pen/QEboZm/" target="_blank" rel="external">“用 position 属性隐藏元素”</a></p>
<p>这种方法的主要原理是通过将元素的 top 和 left 设置成足够大的负数，使它在屏幕上不可见。采用这个技术的一个好处（或者潜在的缺点）是用它隐藏的元素的内容可以被读屏软件读取。这完全可以理解，是因为你只是将元素移到可视区域外面让用户无法看到它。</p>
<p>你得避免使用这个方法去隐藏任何可以获得焦点的元素，因为如果那么做，当用户让那个元素获得焦点时，会导致一个不可预料的焦点切换。这个方法在创建自定义复选框和单选按钮时经常被使用。（用 DOM 模拟复选框和单选按钮，但用这个方法隐藏真正的 checkbox 和 radio 元素来“接收”焦点切换——译者注）</p>
<h2 id="Clip-path"><a href="#Clip-path" class="headerlink" title="Clip-path"></a>Clip-path</h2><p>隐藏元素的另一种方法是通过剪裁它们来实现。在以前，这可以通过 <code>clip</code> 属性来实现，但是这个属性被废弃了，换成一个更好的属性叫做 <code>clip-path</code>。Nitish Kumar 最近在 SitePoint 发表了<a href="https://www.sitepoint.com/introducing-css-clip-path-property/" target="_blank" rel="external">“介绍 <code>clicp-path</code> 属性”</a>这篇文章，通过阅读它可以了解这个属性的更多高级用法。</p>
<p>记住，<code>clip-path</code> 属性还<a href="http://caniuse.com/#feat=css-clip-path" target="_blank" rel="external">没有在 IE 或者 Edge 下被完全支持</a>。如果要在你的 <code>clip-path</code> 中使用外部的 SVG 文件，浏览器支持度还要更低。使用 <code>clip-path</code> 属性来隐藏元素的代码看起来如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.hide &#123;</div><div class="line">  clip-path: polygon(0px 0px,0px 0px,0px 0px,0px 0px);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面是一个实际使用它的例子：</p>
<p>看 <a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a> 提供的例子<a href="http://codepen.io/SitePoint/pen/YWXgdW/" target="_blank" rel="external">“用 clip-path 属性隐藏元素”</a></p>
<p>如果你把鼠标悬停在第一个元素上，它依然可以影响第二个元素，尽管第二个元素已经通过<code>clip-path</code> 隐藏了。如果你点击它，它会移除用来隐藏的 class，让我们的元素从那个位置显现出来。被隐藏元素中的文字仍然能够通过读屏软件读取，许多 WordPress 站点使用<code>clip-path</code> 或者之前的 <code>clip</code> 来实现专门为读屏软件提供的文字。</p>
<p>虽然我们的元素自身不再显示，它也依然占据本该占据的矩形大小，它周围的元素的行为就如同它可见时一样。记住用户交互例如鼠标悬停或者点击在剪裁区域之外也不可能生效。在我们的例子里，剪裁区大小为零，这意味着用户将不能与隐藏的元素直接交互。此外，这个属性能够使用各种过渡动画来实现不同的效果。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>在这篇教程里，我们看了 5 种不同的通过 CSS 隐藏元素的方法。每一种方法都与其他几种有一点区别。知道你想要实现什么有助于你决定采用哪一个属性，随着时间推移，你就能根据实际需求本能地选择最佳方式了。</p>
<p>转自：<a href="http://www.zcfy.cc/article/457" target="_blank" rel="external">http://www.zcfy.cc/article/457</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用 CSS 隐藏页面元素有许多种方法。你可以将 &lt;code&gt;opacity&lt;/code&gt; 设为 &lt;code&gt;0&lt;/code&gt;、将 &lt;code&gt;visibility&lt;/code&gt; 设为 &lt;code&gt;hidden&lt;/code&gt;、将 &lt;code&gt;display&lt;/code&gt; 设为 &lt;code&gt;none&lt;/code&gt; 或者将 &lt;code&gt;position&lt;/code&gt; 设为 &lt;code&gt;absolute&lt;/code&gt; 然后将位置设到不可见区域。
    
    </summary>
    
    
      <category term="CSS" scheme="https://zuobaiquan.github.io/tags/CSS/"/>
    
  </entry>
  
</feed>
